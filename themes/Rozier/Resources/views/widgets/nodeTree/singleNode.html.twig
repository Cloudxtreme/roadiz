{% set source = node.nodeSources.first %}
{% if source.title %}
    {% set name = source.title %}
{% else %}
    {% set name = node.nodeName %}
{% endif %}
{% set type = node.nodeType.name %}

{% set classes = [
type|lower,
'nodetree-element'
] %}

{% if nodeTree.canReorder %}
    {% set classes = classes|merge(['uk-nestable-item']) %}
{% else %}
    {% set classes = classes|merge(['non-nestable-list-item']) %}
{% endif %}

{% if not node.isHidingChildren and not node.nodeType.isHidingNodes %}
    {# Get children using EntityListManager for more control. #}
    {% set children = nodeTree.childrenNodes(node, true) %}
{% else %}
    {% set children = false %}
{% endif %}

{% if children|length > 0 %}
    {% set classes = classes|merge(['has-children']) %}
{% endif %}

{% set innerClasses = [
'nodetree-element-inner',
'uk-nestable-panel',
] %}
{% if node.isHome and node.isHidingChildren %}{% set innerClasses = innerClasses|merge(['home-stack']) %}{% endif %}
{% if node.isHome %}{% set innerClasses = innerClasses|merge(['home-node']) %}{% endif %}
{% if node.isHidingChildren %}{% set innerClasses = innerClasses|merge(['stack-node']) %}{% endif %}
{% if not node.isVisible %}{% set innerClasses = innerClasses|merge(['hidden-node']) %}{% endif %}
{% if not node.isPublished %}{% set innerClasses = innerClasses|merge(['unpublished-node']) %}{% endif %}
{% if not node.isArchived %}{% set innerClasses = innerClasses|merge(['archived-node']) %}{% endif %}
{% if not node.isLocked %}{% set innerClasses = innerClasses|merge(['locked-node']) %}{% endif %}
{% if nodeTree.isStackTree and node.nodeType.isPublishable and source.publishedAt %}
    {% set innerClasses = innerClasses|merge(['datetime-publishable']) %}
    {% if source.publishedAt > date() %}
        {% set innerClasses = innerClasses|merge(['datetime-publishable-future']) %}
    {% endif %}
{% endif %}


<li data-node-id="{{ node.getId }}" class="{{ classes|join(' ') }}">
    {% if not mainNodeTree and not nodeTree.isStackTree %}
        <span class="nodetree-list-item-color"></span>
    {% endif %}
    <div class="{{ innerClasses|join(' ') }}">
        <div class="{% if nodeTree.canReorder %}uk-nestable-handle{% else %}non-nestable-handle{% endif %}">
            {% if not mainNodeTree and not nodeTree.isStackTree %}
                {% set thumbnail = source.documentsByFields.first.document %}
                {% if thumbnail and (thumbnail.image or thumbnail.svg) and not thumbnail.private %}
                    <figure class="nodetree-element-img">
                        {{ thumbnail|display({"fit":"60x60", "quality":80}) }}
                    </figure>
                {% endif %}
            {% endif %}

            {% if node.isHidingChildren and not node.isHome %}
                <i class="uk-icon-folder"></i>
                <span class="icon-stack-folder"></span>
                <span class="icon-stack-folder icon-stack-folder-final"></span>
            {% endif %}
            {% if node.isHome and not node.isHidingChildren and not node.published %}
                <i class="uk-icon-rz-home-unpublished"></i>
            {% elseif node.isHome and not node.isHidingChildren %}
                <i class="uk-icon-rz-home"></i>
            {% elseif node.isHome and node.isHidingChildren %}
                <i class="uk-icon-rz-building"></i>
            {% endif %}
            {% if nodeTree.isStackTree and node.nodeType.isPublishable and source.publishedAt %}
                <div class="nodetree-published-at uk-badge"><i class="uk-icon-clock-o"></i> {{ source.publishedAt|localizeddate('short', 'none') }}</div>
            {% endif %}
        </div>

        <div class="tree-element-name nodetree-element-name"{% if nodeTree.translation is rtl %} dir="rtl"{% endif %}>
            {% if node.isHidingChildren %}
                <a href="{{ path('nodesTreePage', {
                    nodeId: node.id,
                    translationId: nodeTree.translation.id
                }) }}">{{- name -}}</a>
            {% else %}
                <a href="{{ path('nodesEditSourcePage', {
                    nodeId:node.id,
                    translationId: nodeTree.translation.id
                }) }}">{{- name -}}</a>
            {% endif %}
        </div>

        {% if nodeTree.isStackTree and node.tags|length %}
            <div class="nodetree-tags">
                {% for tag in node.tags %}
                    {% set ttag = tag.translatedTagsByTranslation(nodeTree.translation) %}
                    {% set tagName = ttag[0].name|default(tag.tagName) %}

                    <a href="?tagId={{ tag.id }}" class="uk-badge"><i class="uk-icon-tag"></i> {{ tagName -}}</a>
                {% endfor %}
            </div>
        {% endif %}

        {% if nodeTree.isStackTree %}
            <div class="nodetree-bulk-selection">
                <input class="node-checkbox" type="checkbox" name="bulk-selection[]" value="{{ node.getId }}" />
            </div>
        {% endif %}

        <div class="tree-contextualmenu nodetree-contextualmenu uk-button-dropdown"
             data-uk-dropdown="{mode:'click',boundary:'#root-tree'}">
            <a href="#" tabindex="-1" class="tree-contextualmenu-button uk-button uk-button-mini"><i class="uk-icon-caret-down"></i></a>
            <nav class="uk-dropdown uk-dropdown-small uk-dropdown-flip">
                <div class="vertical-nodetype">
                    <p class="text">{{- type -}}</p>
                    {% if node.Locked %} <i class="uk-icon-rz-lock"></i>{% endif %}
                    {% if not node.Visible %} <i class="uk-icon-eye-slash"></i>{% endif %}
                </div>
                <div class="uk-nav uk-nav-dropdown">
                    <p class="add-child">
                        <a title="{{ "add.node.%name%.child"|trans({'%name%': node.getNodeName}) }}" href="{{ path('nodesAddChildPage', { nodeId:node.getId }) }}">
                            <i class="uk-icon-rz-plus"></i> {% trans %}add.a.child.node{% endtrans %}
                        </a>
                    </p>
                    <div class="wrapper">
                        <header class="uk-nav-header">Actions</header>
                        <p>
                            <a title="{{ "edit.node.%name%"|trans({'%name%': node.getNodeName}) }}" href="{{ path('nodesEditPage', { nodeId:node.getId }) }}">
                                <i class="uk-icon-rz-pencil"></i> {% trans %}edit.node{% endtrans %}
                            </a>
                        </p>
                        {% if not node.Locked %}
                            <p>
                                <a class="move-node-first-position smaller-text" title="{% trans %}move.node.to.first.position{% endtrans %}" href="#">
                                    <i class="uk-icon-arrow-up"></i> {% trans %}move.node.to.first.position{% endtrans %}
                                </a>
                            </p>
                            <p>
                                <a class="move-node-last-position smaller-text" title="{% trans %}move.node.to.last.position{% endtrans %}" href="#">
                                    <i class="uk-icon-arrow-down"></i> {% trans %}move.node.to.last.position{% endtrans %}
                                </a>
                            </p>
                        {% endif %}

                        {% if workflow_can(node, 'delete') %}
                            {% set refererUrl = request.uri %}
                            {% if refererUrl matches '/ajax/' and parent %}
                                {% set refererUrl = path('nodesEditSourcePage', { nodeId:parent.getId, translationId:nodeTree.getTranslation.getId}) %}
                            {% elseif refererUrl matches '/ajax/' %}
                                {% set refererUrl = path('nodesHomePage') %}
                            {% endif %}
                            <p>
                                <a title="{{ "delete.node.%name%"|trans({'%name%': node.getNodeName}) }}" href="{{ path('nodesDeletePage', { nodeId:node.getId, referer:refererUrl }) }}">
                                    <i class="uk-icon-rz-trash-o"></i> {% trans %}delete.node{% endtrans %}
                                </a>
                            </p>
                        {% endif %}
                    </div>
                    {% if not node.Locked %}
                        <div class="wrapper node-actions">
                            <header class="uk-nav-header">{% trans %}statuses{% endtrans %}</header>
                            <p>
                                {% if node.visible %}
                                    <a data-action="hide" data-status="visible" data-value="0" class="hide-node" title="{% trans %}node.hide{% endtrans %}" href="#"><i class="uk-icon-eye-slash"></i> {% trans %}node.hide{% endtrans %}</a>
                                {% else %}
                                    <a data-action="show" data-status="visible" data-value="1" class="show-node" title="{% trans %}node.show{% endtrans %}" href="#"><i class="uk-icon-rz-visibility-mini"></i> {% trans %}node.show{% endtrans %}</a>
                                {% endif %}
                            </p>
                            {% if not node.isPublished and workflow_can(node, 'publish') %}
                            <p>
                                <a data-action="publish"
                                   data-status="status"
                                   data-value="publish"
                                   class="publish-node"
                                   title="{% trans %}node.publish{% endtrans %}"
                                   href="#"><i class="uk-icon-rz-published-mini"></i> {% trans %}node.publish{% endtrans %}</a>
                            </p>
                            {% endif %}
                            {% if workflow_can(node, 'reject') %}
                            <p>
                                <a data-action="reject"
                                   data-status="status"
                                   data-value="reject"
                                   class="unpublish-node"
                                   title="{% trans %}node.unpublish{% endtrans %}"
                                   href="#"><i class="uk-icon-rz-draft-nodes"></i> {% trans %}node.unpublish{% endtrans %}</a>
                            </p>
                            {% endif %}
                            {% if workflow_can(node, 'publish') %}
                            <p><a class="publish-all-node"
                                  title="{% trans %}publish_node_offspring{% endtrans %}"
                                  href="{{ path('nodesPublishAllAction', {nodeId : node.id}) }}"><i class="uk-icon-rz-published-mini"></i> {% trans %}publish_node_offspring{% endtrans %}</a></p>
                            {% endif %}
                            <p>
                                <a data-action="duplicate"
                                   class="duplicate-node"
                                   title="{% trans %}node.duplicate{% endtrans %}"
                                   href="#"><i class="uk-icon-rz-duplicate"></i> {% trans %}node.duplicate{% endtrans %}</a>
                            </p>
                        </div>
                    {% endif %}
                </div>
            </nav>
        </div>
        {% if children %}
            <div class="minus" data-nestable-action="toggle"></div>
        {% endif %}
    </div>

    {% set subListClasses = ['uk-nestable-list'] %}
    {% if not mainNodeTree and not nodeTree.isStackTree %}
        {% set subListClasses = subListClasses|merge(['children-node-widget-list']) %}
    {% endif %}
    {% if node.isHidingChildren or node.nodeType.isHidingNodes or node.getChildren.count == 0 %}
        {% set subListClasses = subListClasses|merge(['empty']) %}
    {% endif %}
    {% spaceless %}
        {% if children %}
        <ul class="{{ subListClasses|join(' ') }}" data-parent-node-id="{{ node.getId }}">
            {#
             # For drag&drop ease, we don't create nested lists
             # We will have to check after OR inside drag status
             #}
                {% for subNode in children %}
                    {% include '@Rozier/widgets/nodeTree/singleNode.html.twig' with {
                    "node":subNode,
                    "parent":node,
                    "request":request,
                    "nodeTree":nodeTree,
                    "mainNodeTree":mainNodeTree,
                    "nodeStatuses":nodeStatuses
                    } only %}
                {% endfor %}
        </ul>
        {% endif %}
    {% endspaceless %}
</li>
